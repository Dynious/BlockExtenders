import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

ext.env = System.getenv()
ext.cclVersion = "1.1.1.95"

version = "1.0.8b"
group = "com.dynious.refinedrelocation"
archivesBaseName = "RefinedRelocation-1.7.10"

if (env.BUILD_NUMBER != null) {
    version += "-snapshot-" + env.BUILD_NUMBER
}

minecraft {
    version = "1.7.10-10.13.3.1407-1.7.10"
    
    replaceIn "lib/Reference.java"
    replace "@VERSION@", project.version
}

repositories {
    mavenCentral()
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name "waila"
        url "http://mobiusstrip.eu/maven"
    }
}

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.95:dev"
    compile "codechicken:ForgeMultipart:1.7.10-1.1.0.299:dev"
    compile "com.mod-buildcraft:buildcraft:6.3.3:dev"
    compile "net.industrial-craft:industrialcraft-2:2.2.658-experimental:api"
    compile "mcp.mobius.waila:Waila:1.5.10:api"
    compile "appeng:appliedenergistics2:rv2-alpha-1:dev"
    compile "com.pahimar.ee3:EquivalentExchange3:1.7.10-0.2.347:dev"
    compile "mcp.mobius.jabba:Jabba:1.2.0a_1.7.10:dev"
}

apply from: 'downloader.gradle'

addGitDep("cofh","https://github.com/CoFH/CoFHLib.git","361316980153984ca97f6cc2e7cae9ce89b025a2")
addGitDep("ic","https://github.com/progwml6/ironchest.git","75ac574c759c099b93c2d2d838c14f2ab4a98383")
addZipDep("it","http://build.technicpack.net/job/Inventory-Tweaks/147/artifact/build/libs/InventoryTweaks-api-1.58-147.jar","158")

compileApiJava.dependsOn(getDeps)

afterEvaluate {
    sourceMainJava.dependsOn(getDeps)
}

sourceSets {
    api {
        java {
            srcDir 'build/deps/cofh/src/main/java'
            include 'cofh/api/**'
            
            srcDir 'build/deps/ic/src/main/java'
            include 'cpw/**'
            
            srcDir 'build/deps/it'
            include 'invtweaks/**'
        }
    }
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'dependancies.info'
                
        // replace version and mcversion
        filter(ReplaceTokens, tokens: [VERSION: project.version, MCVERSION: project.minecraft.version, CCLVERSION: project.cclVersion])
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'dependancies.info'
    }
}

jar {
    manifest {
        attributes("FMLCorePlugin": "com.dynious.refinedrelocation.asm.LoadingPlugin", "FMLCorePluginContainsFMLMod": "true", "FMLAT": "RefinedRelocation_at.cfg")
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
	
	manifest {
        attributes("FMLCorePlugin": "com.dynious.refinedrelocation.asm.LoadingPlugin", "FMLCorePluginContainsFMLMod": "true", "FMLAT": "RefinedRelocation_at.cfg")
    }
}

task apiZip(type: Zip) {
    from(sourceSets.main.java) {
        include 'com/dynious/refinedrelocation/api/**'
    }
    //destinationDir = file 'build/lib'
    classifier = 'api'
}

apiZip.mustRunAfter(jar)

artifacts {
    archives deobfJar
    archives apiZip
}
